# -*- coding: utf-8 -*-
"""Системы координат - лабораторные

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nIpZGg7pHI9IHQVRSEJbstiIY0BlnYQx
"""

import numpy as np
from math import *

RAD_TO_DEG = 2 / pi * 360.0
DEG_TO_RAD = 2 * pi / 360.0


def helmertTransformation(x, y, z, dx, dy, dz, i_wx, i_wy, i_wz, i_m, tType):
    seconds_to_radians = 206264.806
    wx = i_wx / seconds_to_radians
    wy = i_wy / seconds_to_radians
    wz = i_wz / seconds_to_radians
    m = i_m / 1000000  # перевод значения m в нормальный вид
    initial_coordinates = np.array([[x], [y], [z]])
    increments = np.array([[dx], [dy], [dz]])
    shit_array = np.array([[1, wz, -wy], [-wz, 1, wx], [wy, -wx, 1]])

    temp = ((1 + m) * (shit_array @ initial_coordinates) + increments)
    print("Номер связи: " + str(tType))
    print(temp.round(3))


# tType - номер связи из таблицы, которая находится в методичке
def transform_coordinate(X, Y, Z, tType):
    if tType == 1:
        helmertTransformation(X, Y, Z, 0, -0.014, 0.008, 0.000562, 0.000019, -0.000053, 0.0006, tType)
    if tType == 2:
        helmertTransformation(X, Y, Z, -23.557, 140.844, 79.778, 0.0023, 0.34646, 0.79421, 0.228, tType)
    if tType == 3:
        helmertTransformation(X, Y, Z, -24.457, 130.784, 81.538, 0.0023, -0.00354, 0.13421, 0.228, tType)
    if tType == 4:
        helmertTransformation(X, Y, Z, 0.373, -0.186, -0.202, 0.0023, -0.00354, 0.00421, 0.008, tType)
    if tType == 5:
        helmertTransformation(X, Y, Z, 0.013, -0.106, -0.022, 0.0023, -0.00354, 0.00421, 0.008, tType)
    if tType == 6:
        helmertTransformation(X, Y, Z, -0.003, -0.001, 0, 0.000019, -0.000042, 0.000002, 0, tType)


class Point:
    def __init__(self, x, y, z, coordinate_system: str):
        self.coordinate = Coordinate(x, y, z)
        self.coordinate_system = coordinate_system

    def get_coordinates(self, coordinate_system):
        return self.coordinate


class Coordinate:
    x, y, z = 0, 0, 0

    def __init__(self, x, y, z):
        self.x = x
        self.y = y
        self.z = z
